#+STARTUP: content
* Dashboard
#+begin_src emacs-lisp
  (require 'dashboard)
  (dashboard-setup-startup-hook)
  ;; Set the banner
  (setq dashboard-startup-banner "~/mega/emacs_utilities/emacs_startup.txt")
  ;; Value can be
  ;; - nil to display no banner
  ;; - 'official which displays the official emacs logo
  ;; - 'logo which displays an alternative emacs logo
  ;; - 1, 2 or 3 which displays one of the text banners
  ;; - "path/to/your/image.gif", "path/to/your/image.png" or "path/to/your/text.txt" which displays whatever gif/image/text you would prefer
  ;; - a cons of '("path/to/your/image.png" . "path/to/your/text.txt")

  ;; put content in centre
  (setq dashboard-center-content t)

  ;; Set the footer
  (setq dashboard-footer-messages '("XOXO"))
  ;; Set the title
  (setq dashboard-banner-logo-title "Eivind/Gray")
#+end_src
* Custom widget
#+begin_src emacs-lisp
  (defun dashboard-links (list-size)
    (widget-create 'link
		   :notify (lambda (&rest ignore)
			     (deft-folder-deft))
		   :mouse-face 'highlight
		   :follow-link "\C-m"
		   ":open-file-folder: Home")
    (widget-create 'link
		   :notify (lambda (&rest ignore)
			     (deft-folder-teos))
		   :mouse-face 'highlight
		   :follow-link "\C-m"
		   ":map: Teos")
    (widget-create 'link
		   :notify (lambda (&rest ignore)
			     (find-file "~/emacs-config/mod/dashboard.org"))
		   :mouse-face 'highlight
		   :follow-link "\C-m"
		   ":tools: Dashboard Config")
    (widget-create 'link
		   :notify (lambda (&rest ignore)
			     (mastodon))
		   :mouse-face 'highlight
		   :follow-link "\C-m"
		   ":speech_left: Mastodon")
    (widget-create 'link
		   :notify (lambda (&rest ignore)
			     (elfeed))
		   :mouse-face 'highlight
		   :follow-link "\C-m"
		   ":newspaper: Elfeed")
    (widget-create 'link
		   :notify (lambda (&rest ignore)
			     (shell))
		   :mouse-face 'highlight
		   :follow-link "\C-m"
		   ":computer: Shell")
    (widget-create 'link
		   :notify (lambda (&rest ignore)
			     (eshell))
		   :mouse-face 'highlight
		   :follow-link "\C-m"
		   ":purple_heart: Eshell")
    )

  (defun dashboard-loaded-modules (list-size)
    (insert (concat "Config modules loaded:" "\n" (mapconcat 'identity loaded-modules ":"))))

  (defun dashboard-line (list-size)
    (insert "------------------------------------------------------------------------------------------"))

  (add-to-list 'dashboard-item-generators '(line1 . dashboard-line))
  (add-to-list 'dashboard-item-generators '(line2 . dashboard-line))
  (add-to-list 'dashboard-item-generators '(custom1 . dashboard-links))
  (add-to-list 'dashboard-item-generators '(custom2 . dashboard-loaded-modules))
  (setq dashboard-items '((custom1) (line1) (agenda . 10) (line2) (custom2)))
#+end_src
* Loaded-modules
#+begin_src emacs-lisp
  (add-to-list 'loaded-modules "dashboard")
#+end_src

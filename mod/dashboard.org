#+STARTUP: content
* Dashboard
#+begin_src emacs-lisp
  (require 'dashboard)
  (dashboard-setup-startup-hook)
  ;; Set the banner
  (setq dashboard-startup-banner "~/mega/emacs_utilities/emacs_startup.txt")
  ;; Value can be
  ;; - nil to display no banner
  ;; - 'official which displays the official emacs logo
  ;; - 'logo which displays an alternative emacs logo
  ;; - 1, 2 or 3 which displays one of the text banners
  ;; - "path/to/your/image.gif", "path/to/your/image.png" or "path/to/your/text.txt" which displays whatever gif/image/text you would prefer
  ;; - a cons of '("path/to/your/image.png" . "path/to/your/text.txt")

  ;; Content is not centered by default. To center, set
  (setq dashboard-center-content t)

  ;; Set the footer
  (setq dashboard-footer-messages '(""))
  ;; Set the title
  (setq dashboard-banner-logo-title "")
#+end_src
* Custom widget
#+begin_src emacs-lisp
  (defun dashboard-insert-custom (list-size)
    (widget-create 'link
		   :notify (lambda (&rest ignore)
			     (deft-folder-deft))
		   :mouse-face 'highlight
		   :follow-link "\C-m"
		   "Home")
    (widget-create 'link
		   :notify (lambda (&rest ignore)
			     (deft-folder-teos))
		   :mouse-face 'highlight
		   :follow-link "\C-m"
		   "Teos")
    (widget-create 'link
		   :notify (lambda (&rest ignore)
			     (find-file "~/emacs-config/mod/dashboard.org"))
		   :mouse-face 'highlight
		   :follow-link "\C-m"
		   "Dashboard Config")
    (widget-create 'link
		   :notify (lambda (&rest ignore)
			     (mastodon))
		   :mouse-face 'highlight
		   :follow-link "\C-m"
		   "Mastodon")
    (widget-create 'link
		   :notify (lambda (&rest ignore)
			     (elfeed))
		   :mouse-face 'highlight
		   :follow-link "\C-m"
		   "Elfeed")
    (widget-create 'link
		   :notify (lambda (&rest ignore)
			     (shell))
		   :mouse-face 'highlight
		   :follow-link "\C-m"
		   "Shell")
    (widget-create 'link
		   :notify (lambda (&rest ignore)
			     (eshell))
		   :mouse-face 'highlight
		   :follow-link "\C-m"
		   "Eshell")
    (widget-create 'link
		   :notify (lambda (&rest ignore)
			     (run-r))
		   :mouse-face 'highlight
		   :follow-link "\C-m"
		   "R")
    (widget-create 'link
		   :notify (lambda (&rest ignore)
			     (run-python))
		   :mouse-face 'highlight
		   :follow-link "\C-m"
		   "Python")
    )

  (add-to-list 'dashboard-item-generators '(custom . dashboard-insert-custom))
  (setq dashboard-items '((custom) (agenda . 10)))
#+end_src
* loaded-modules
#+begin_src emacs-lisp
  (add-to-list 'loaded-modules "dashboard")
#+end_src

#+STARTUP: content
An unholy combination of Org Roam, Deft and Zettelkasten.
* Deft and Zetteldeft
** General Settings
#+begin_src emacs-lisp
  (require 'deft)
  (setq-default
   deft-extensions '("org")
   deft-default-extension "org"
   deft-directory FOLDER_ROAM
   deft-text-mode 'org-mode
   deft-use-filename-as-title t
   deft-use-filter-string-for-filename t
   deft-auto-save-interval 0
   deft-file-limit 99
   )
  (add-hook 'deft-mode-hook (lambda() (setq-default truncate-lines t)))
  (use-package zetteldeft
    :ensure t
    :config
    (setq zetteldeft-home-id "20240107102607")
    )
#+end_src
** Functions
#+begin_src emacs-lisp
  ;; zetteldeft wander lets you access a random note
  (defun zetteldeft-wander ()
    "Wander through `zetteldeft' notes.
    Search `deft' for a random `zetteldeft' id."
    (interactive)
    (switch-to-buffer deft-buffer)
    (let ((all-files (deft-find-all-files-no-prefix)))
      (deft-filter
	(zetteldeft--lift-id
	 (nth (random (length all-files))
	      all-files)))))
#+end_src
* Org-Roam
** General Settings
#+begin_src emacs-lisp
    (use-package org-roam
      :ensure t
      :init
      (setq org-roam-v2-ack t)
      :custom
      (org-roam-directory FOLDER_ROAM))
    ;; org-roam capture templates
    (setq org-roam-capture-templates
	  '(
	    ;; Standard
	    ("s" "Standard" plain
	     "%?"
	     :if-new (file+head "%<%Y%m%d%H%M%S>-${slug}.org"
				":PROPERTIES:\n:CREATED: %U\n:TAGS: \n:END:\n#+STARTUP: content\n#+title: ${title}\nBacklink:")
	     :unnarrowed t
	     :immediate-finish t)))
#+end_src
** Functions
#+begin_src emacs-lisp
  (defun roam-home ()
    (interactive)
    (deft)
    (deft-refresh)
    (org-roam-update-org-id-locations)
    (org-roam-setup)
    (global-unset-key (kbd "C-c d"))
    (global-set-key (kbd "C-c d l")  'org-roam-buffer-toggle)
    (global-set-key (kbd "C-c d f")  'org-roam-node-find)
    (global-set-key (kbd "C-c d i")  'org-roam-node-insert)
    (global-set-key (kbd "C-c d u")  'org-roam-ui-mode)
    (global-set-key (kbd "C-c d c")  'org-id-get-create)
    (global-set-key (kbd "C-c d d")  'zetteldeft-deft-new-search)
    (global-set-key (kbd "C-c d h")  'zetteldeft-go-home)
    (global-set-key (kbd "C-c d r")  'deft-refresh)
    (global-set-key (kbd "C-c d s")  'zetteldeft-search-at-point)
    (global-set-key (kbd "C-c d t")  'org-roam-dailies-capture-today)
    (global-set-key (kbd "C-c d T")  'org-roam-dailies-goto-today)
    (global-set-key (kbd "C-c d y")  'org-roam-dailies-capture-yesterday)
    (global-set-key (kbd "C-c d Y")  'org-roam-dailies-goto-yesterday)
    (global-set-key (kbd "C-c d w")  'zetteldeft-wander)
    (global-set-key (kbd "C-c d x")  'zetteldeft-count-words)
    (global-set-key (kbd "C-c d #")  'zetteldeft-tag-buffer)
    )
#+end_src
** Keybindings
See function section.
#+begin_src emacs-lisp
   (global-set-key (kbd "C-c d")  'roam-home)
#+end_src
** open links
Makes link being opened in the same frame instead of a new (or exisiting one).
#+begin_src emacs-lisp
(setf (cdr (assoc 'file org-link-frame-setup)) 'find-file)
#+end_src 
** case insensitive search
The following code make org-roam-node-find and other functions case insensitive.
#+begin_src emacs-lisp
  (defun case-insensitive-org-roam-node-read (orig-fn &rest args)
    (let ((completion-ignore-case t))
      (apply orig-fn args)))

  (advice-add 'org-roam-node-read :around #'case-insensitive-org-roam-node-read)
#+end_src 
* loaded-modules
#+begin_src emacs-lisp
  (add-to-list 'loaded-modules "zettelkasten")
#+end_src

